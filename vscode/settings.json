{
  //* General.
  "window.zoomLevel": -1,
  "workbench.settings.editor": "json",
  "workbench.startupEditor": "none",
  "editor.linkedEditing": true,
  "editor.hover.delay": 200,

  //* Zen mode.
  "zenMode.fullScreen": false,
  "zenMode.centerLayout": false,
  "zenMode.hideLineNumbers": false,
  "zenMode.hideStatusBar": false,
  //// "editor.renderIndentGuides": false,

  //* Tree view.
  "workbench.tree.renderIndentGuides": "none",

  //* Editors.
  "explorer.openEditors.visible": 0,
  "workbench.editor.enablePreview": false,
  "workbench.sash.size": 10,

  //* Scrolling.
  "editor.smoothScrolling": true,
  "workbench.list.smoothScrolling": true,

  //* Tabs.
  //// "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.tabCloseButton": "right",
  //// "workbench.editor.tabSizing": "shrink",
  "workbench.editor.wrapTabs": true,

  //* Panel/Sidebar/ActivityBar.
  "workbench.panel.defaultLocation": "bottom",
  "workbench.sideBar.location": "right",
  "workbench.activityBar.visible": false,

  //* Minimap.
  "editor.minimap.renderCharacters": false,
  "editor.minimap.enabled": false,

  //* Autoformatting.
  "editor.codeActionsOnSave": {
    "source.fixAll": true
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "files.trimTrailingWhitespace": true,

  //* Autocomplete.
  "editor.suggest.insertMode": "replace",
  "editor.tabCompletion": "on",
  "editor.wordBasedSuggestions": false,
  "editor.inlineSuggest.enabled": true,

  //* Cursor.
  "editor.cursorBlinking": "solid",
  "editor.cursorSmoothCaretAnimation": true,
  "editor.cursorWidth": 3,
  //// "editor.cursorSurroundingLines": 10,

  //* Font.
  "editor.codeLensFontFamily": "MonoLisa, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontFamily": "MonoLisa, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontLigatures": false,
  "editor.fontSize": 14,

  //* Indentation.
  "editor.detectIndentation": true,
  "editor.tabSize": 2,

  //* Whitespace.
  "editor.insertSpaces": true,
  "editor.renderWhitespace": "boundary",
  "editor.renderControlCharacters": true,
  "files.eol": "\n",

  //* Lines.
  "editor.lineHeight": 24,
  "editor.lineNumbers": "relative",
  "editor.rulers": [90],
  "editor.renderLineHighlight": "line",

  //* Git.
  "scm.diffDecorationsGutterWidth": 5,
  "diffEditor.renderIndicators": false,
  "diffEditor.renderSideBySide": false,
  "git.terminalAuthentication": false,
  "git.untrackedChanges": "separate",

  //* Search.
  "search.searchEditor.doubleClickBehaviour": "openLocationToSide",
  "search.sortOrder": "countDescending",
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/package-lock.json": true
  },

  //* Terminal.
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.commandsToSkipShell": ["-workbench.action.terminal.focusFind"],

  //* Colortheme/Icontheme.
  "workbench.colorTheme": "Night Owl (No Italics)",
  "workbench.iconTheme": "vscode-icons",
  "workbench.colorCustomizations": {
    "editor.lineHighlightBackground": "#333",

    "[Night Owl (No Italics)]": {
      "editorCursor.foreground": "#DC8CFF",
      "statusBar.foreground": "#D6DEEB",

      "activityBar.activeBorder": "#FF50FF",
      "tab.activeBorder": "#FF50FF",
      "panelTitle.activeBorder": "#FF50FF",

      "activityBar.background": "#000C1D",
      "activityBar.border": "#102a44",
      "editorGroup.border": "#102a44",
      "sideBar.background": "#001122",
      "sideBar.border": "#102a44",
      "sideBar.foreground": "#8BADC1"
    }
  },

  "editor.tokenColorCustomizations": {
    "[Night Owl (No Italics)]": {
      "textMateRules": [
      //// Colors like in https://github.com/haishanh/night-owl.vim
      //// {
      ////   "scope": [
      ////     "entity.name.type.interface.tsx", // interface name.
      ////     "meta.class.tsx meta.definition.method.tsx entity.name.function.tsx", // class method name.
      ////     "meta.definition.function.tsx entity.name.function.tsx", // function name.
      ////     "entity.name.type.alias.tsx" // type name.
      ////     // "meta.function-call.tsx variable.other.object.tsx "
      ////   ],
      ////   "settings": {
      ////     "foreground": "#7FDBCA"
      ////   }
      //// },
      //// {
      ////   "scope": [
      ////     "storage.type.interface.tsx", // `interface`.
      ////     "storage.type.type.tsx", // '`type'.
      ////     "meta.interface.tsx storage.modifier.tsx", // `extends`.
      ////     "storage.type.function.tsx", // `function`.
      ////     "storage.type.class.tsx", // `class`.
      ////     "storage.modifier.async.tsx" //? `async`.
      ////   ],
      ////   "settings": {
      ////     "foreground": "#82AAFF"
      ////   }
      //// },
      //// {
      ////   "scope": ["variable.language.this.tsx"], // `this`.
      ////   "settings": {
      ////     "foreground": "#C5E478"
      ////   }
      //// }
      //// {
      ////   "scope": [
      ////     "keyword.control.import.tsx",
      ////     "keyword.control.as.tsx",
      ////     "keyword.control.from.tsx",
      ////     "keyword.control.export.tsx"
      ////   ],
      ////   "settings": {
      ////     "foreground": "#e99413"
      ////   }
      //// }
      ]
    }
  },

  //* Files.
  "files.defaultLanguage": "${activeEditorLanguage}",
  "files.hotExit": "onExit",
  "files.associations": {
    ".env": "shellscript",
    ".env.*": "shellscript",
    "Pipfile": "toml",
    "*.js": "javascriptreact",
    "*.ts": "typescriptreact"
  },
  "files.exclude": {
    "**/.git/**": true,
    "**/.venv/**": false,
    "**/*cache*/**": true,
    "**/*coverage*/**": true,
    "**/react-app-env.d.ts": true,
    "**/next-env.d.ts": true
  },
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },

  //* Extensions.
  "extensions.closeExtensionDetailsOnViewChange": true,

  //* emmet.
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },

  //* Python.
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.tabSize": 4
  },
  "python.formatting.provider": "yapf",
  "python.formatting.yapfArgs": ["--exclude=*/migrations/*"],
  "python.linting.enabled": true,
  "python.linting.mypyEnabled": true,
  //// "python.linting.mypyArgs": ["--strict", "--show-error-codes"],
  "python.linting.flake8Enabled": true,
  "python.linting.pydocstyleEnabled": false,
  "python.linting.pylintEnabled": false,
  "python.linting.ignorePatterns": ["**/site-packages/**/*.py"],

  //* Typescript.
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.enablePromptUseWorkspaceTsdk": true,

  //* Vim.
  "vim.leader": " ",
  "vim.textwidth": 90,
  //// "vim.foldfix": true, // makes jumping with <number>[jk] laggy.

  "vim.enableNeovim": true,
  "vim.neovimPath": "/opt/homebrew/bin/nvim",

  // gutter.
  "vim.smartRelativeLine": true,
  "vim.showMarksInGutter": true,

  // copying.
  "vim.useSystemClipboard": true,
  "vim.highlightedyank.enable": true,

  // search.
  "vim.incsearch": true,
  "vim.hlsearch": true,
  "vim.ignorecase": true,
  "vim.visualstar": true,

  // extensions.
  "vim.easymotion": true,
  "vim.camelCaseMotion.enable": true,
  "vim.replaceWithRegister": true,
  "vim.surround": true,
  "vim.sneak": true,

  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    //// Visual J joins the highlighted lines, so...
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["Y"],
      "after": ["y", "$"]
    },
    {
      "before": ["N"],
      "after": ["N", "z", "z"]
    },
    {
      "before": ["n"],
      "after": ["n", "z", "z"]
    },

    //// {
    ////   "before": ["<Enter>"],
    ////   "commands": [":nohl"]
    //// },

    //* Ctrl.
    //// {
    ////   "before": ["<C-l>"],
    ////   "commands": [":nohl"]
    //// },

    //* <leader>.
    {
      "before": ["<leader>", "a", "a"],
      "commands": ["alternate.alternateFile"]
    },
    {
      "before": ["<leader>", "a", "v"],
      "commands": ["alternate.alternateFileInSplit"]
    },
    {
      "before": ["<leader>", "/"],
      "commands": [":nohl"]
    },
    {
      "describe": "Open command palette",
      "before": ["<leader>", "p"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "describe": "Go to symbol in file",
      "before": ["<leader>", "t"],
      "commands": ["workbench.action.gotoSymbol"]
    },
    //// {
    ////   "before": ["<leader>", "<leader>"],
    ////   "after": ["<C-^>"]
    //// },

    //* g.
    {
      "before": ["g", "D"],
      "commands": ["editor.action.revealDefinitionAside"]
    },
    {
      "describe": "Rename symbol",
      "before": ["g", "n"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["g", "s"],
      "commands": ["references-view.find"]
    },

    //* [].
    {
      "before": ["]", "<space>"],
      "commands": ["editor.action.insertLineAfter"]
    },
    {
      "before": ["[", "<space>"],
      "commands": ["editor.action.insertLineBefore"]
    },
    {
      "before": ["]", "b"],
      "after": ["g", "t"]
    },
    {
      "before": ["[", "b"],
      "after": ["g", "T"]
    },
    {
      "before": ["[", "c"],
      "commands": ["workbench.action.editor.nextChange"]
    },
    {
      "before": ["]", "c"],
      "commands": ["workbench.action.editor.previousChange"]
    },
    {
      "before": ["[", "g"],
      "commands": ["editor.action.marker.next", "closeMarkersNavigation"]
    },
    {
      "before": ["]", "g"],
      "commands": ["editor.action.marker.prev", "closeMarkersNavigation"]
    }
  ],

  //* Prettier.
  "prettier.jsxSingleQuote": true,
  "prettier.printWidth": 90,
  "prettier.singleQuote": true,

  //* Tabnine.
  "tabnine.experimentalAutoImports": true,

  //* Color Highlight.
  "color-highlight.languages": [
    "json",
    "jsonc",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "color-highlight.markerType": "dot-before",
  "color-highlight.markRuler": false,

  //* Todo tree.
  "todo-tree.regex.regexCaseSensitive": true,
  "todo-tree.general.tags": ["TODO", "NOTE", "HACK", "FIXME", "BUG"],
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "foreground": "#66ffa6",
      "gutterIcon": true,
      "icon": "flame"
    },
    "NOTE": {
      "foreground": "gold",
      "gutterIcon": true,
      "icon": "bookmark"
    },
    "HACK": {
      "foreground": "#78f0e0",
      "gutterIcon": true,
      "icon": "smiley"
    },
    "FIXME": {
      "foreground": "peachpuff",
      "gutterIcon": true,
      "icon": "flame"
    },
    "BUG": {
      "foreground": "#FF5874",
      "gutterIcon": true,
      "icon": "flame"
    }
  },

  //* Better comments.
  "better-comments.highlightPlainText": false,
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    }
  ],

  //* Highlight matching tag.
  "highlight-matching-tag.highlightSelfClosing": true,
  "highlight-matching-tag.styles": {
    "opening": {
      "name": { "underline": "gold" }
      //// "name": { "underline": "#DC8CFF" }
    }
  },

  //* Code spell.
  "cSpell.ignoreRegExpList": [
    "asgi",
    "dotenv",
    "isort",
    "isdigit",
    "noqa",
    "pipenv",
    "psql",
    "pytest",
    "redux",
    "stylelint",
    "yapf",
    "yasg",
    "zfill",
    "ipdb"
  ],

  //* Garbage.
  "redhat.telemetry.enabled": false,
  "yaml.schemas": {
    "file:///Users/defytheflow/.vscode/extensions/atlassian.atlascode-2.9.1/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
  }
}
